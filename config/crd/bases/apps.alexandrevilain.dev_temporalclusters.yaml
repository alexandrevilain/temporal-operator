---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: temporalclusters.apps.alexandrevilain.dev
spec:
  group: apps.alexandrevilain.dev
  names:
    kind: TemporalCluster
    listKind: TemporalClusterList
    plural: temporalclusters
    singular: temporalcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TemporalCluster defines a temporal cluster deployment.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the Temporal cluster.
            properties:
              admintools:
                description: AdminTools allows configuration of the optional admin
                  tool pod deployed alongside the cluster.
                properties:
                  enabled:
                    description: Enabled defines if the operator should deploy the
                      admin tools alongside the cluster.
                    type: boolean
                  image:
                    description: Image defines the temporal admin tools docker image
                      the instance should run.
                    type: string
                type: object
              datastores:
                description: Datastores the cluster can use. Datastore names are then
                  referenced in the PersistenceSpec to use them for the cluster's
                  persistence layer.
                items:
                  description: TemporalDatastoreSpec contains temporal datastore specifications.
                  properties:
                    cassandra:
                      description: Cassandra holds all connection parameters for Cassandra
                        datastore.
                      properties:
                        connectTimeout:
                          description: ConnectTimeout is a timeout for initial dial
                            to cassandra server.
                          type: string
                        consistency:
                          description: Consistency configuration.
                          properties:
                            consistency:
                              description: Consistency sets the default consistency
                                level. Values identical to gocql Consistency values.
                                (defaults to LOCAL_QUORUM if not set).
                              enum:
                              - ANY
                              - ONE
                              - TWO
                              - THREE
                              - QUORUM
                              - ALL
                              - LOCAL_QUORUM
                              - EACH_QUORUM
                              - LOCAL_ONE
                              type: integer
                            serialConsistency:
                              description: SerialConsistency sets the consistency
                                for the serial prtion of queries. Values identical
                                to gocql SerialConsistency values. (defaults to LOCAL_SERIAL
                                if not set)
                              enum:
                              - SERIAL
                              - LOCAL_SERIAL
                              type: integer
                          type: object
                        datacenter:
                          description: Datacenter is the data center filter arg for
                            cassandra.
                          type: string
                        disableInitialHostLookup:
                          description: DisableInitialHostLookup instructs the gocql
                            client to connect only using the supplied hosts.
                          type: boolean
                        hosts:
                          description: Hosts is a list of cassandra endpoints.
                          items:
                            type: string
                          type: array
                        keyspace:
                          description: Keyspace is the cassandra keyspace.
                          type: string
                        maxConns:
                          description: MaxConns is the max number of connections to
                            this datastore for a single keyspace.
                          type: integer
                        port:
                          description: Port is the cassandra port used for connection
                            by gocql client.
                          type: integer
                        user:
                          description: User is the cassandra user used for authentication
                            by gocql client.
                          type: string
                      required:
                      - datacenter
                      - hosts
                      - keyspace
                      - port
                      - user
                      type: object
                    elasticsearch:
                      description: Elasticsearch holds all connection parameters for
                        Elasticsearch datastores.
                      properties:
                        closeIdleConnectionsInterval:
                          description: CloseIdleConnectionsInterval is the max duration
                            a connection stay open while idle.
                          type: string
                        enableHealthcheck:
                          description: EnableHealthcheck enables or disables healthcheck
                            on the temporal cluster's es client.
                          type: boolean
                        enableSniff:
                          description: EnableSniff enables or disables sniffer on
                            the temporal cluster's es client.
                          type: boolean
                        indices:
                          description: Indices holds visibility index names.
                          properties:
                            secondaryVisibility:
                              description: SecondaryVisibility defines secondary visibility's
                                index name.
                              type: string
                            visibility:
                              description: Visibility defines visibility's index name.
                              type: string
                          required:
                          - visibility
                          type: object
                        logLevel:
                          description: LogLevel defines the temporal cluster's es
                            client logger level.
                          type: string
                        url:
                          description: URL is the connection url to connect to the
                            instance.
                          pattern: ^https?:\/\/.+$
                          type: string
                        username:
                          description: Username is the username to be used for the
                            connection.
                          type: string
                        version:
                          default: v7
                          description: Version defines the elasticsearch version.
                          pattern: ^v(6|7)$
                          type: string
                      required:
                      - indices
                      - url
                      - username
                      - version
                      type: object
                    name:
                      description: Name is the name of the datatstore. It should be
                        unique and will be referenced within the persitence spec.
                      type: string
                    passwordSecretRef:
                      description: PasswordSecret is the reference to the secret holding
                        the password.
                      properties:
                        key:
                          description: Key in the Secret.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                      - name
                      type: object
                    sql:
                      description: SQL holds all connection parameters for SQL datastores.
                      properties:
                        connectAddr:
                          description: ConnectAddr is the remote addr of the database.
                          type: string
                        connectAttributes:
                          additionalProperties:
                            type: string
                          description: ConnectAttributes is a set of key-value attributes
                            to be sent as part of connect data_source_name url
                          type: object
                        connectProtocol:
                          description: ConnectProtocol is the protocol that goes with
                            the ConnectAddr.
                          type: string
                        databaseName:
                          description: DatabaseName is the name of SQL database to
                            connect to.
                          type: string
                        maxConnLifetime:
                          description: MaxConnLifetime is the maximum time a connection
                            can be alive
                          format: int64
                          type: integer
                        maxConns:
                          description: MaxConns the max number of connections to this
                            datastore.
                          type: integer
                        maxIdleConns:
                          description: MaxIdleConns is the max number of idle connections
                            to this datastore.
                          type: integer
                        pluginName:
                          description: PluginName is the name of SQL plugin.
                          type: string
                        taskScanPartitions:
                          description: TaskScanPartitions is the number of partitions
                            to sequentially scan during ListTaskQueue operations.
                          type: integer
                        user:
                          description: User is the username to be used for the connection.
                          type: string
                      required:
                      - connectAddr
                      - databaseName
                      - pluginName
                      - user
                      type: object
                    tls:
                      description: TLS is an optional option to connect to the datastore
                        using TLS.
                      properties:
                        caFileRef:
                          description: CaFileRef is a reference to a secret containing
                            the ca file.
                          properties:
                            key:
                              description: Key in the Secret.
                              type: string
                            name:
                              description: Name of the Secret.
                              type: string
                          required:
                          - name
                          type: object
                        certFileRef:
                          description: CertFileRef is a reference to a secret containing
                            the cert file.
                          properties:
                            key:
                              description: Key in the Secret.
                              type: string
                            name:
                              description: Name of the Secret.
                              type: string
                          required:
                          - name
                          type: object
                        enableHostVerification:
                          description: EnableHostVerification defines if the hostname
                            should be verified when connecting to the datastore.
                          type: boolean
                        enabled:
                          description: Enabled defines if the cluster should use a
                            TLS connection to connect to the datastore.
                          type: boolean
                        keyFileRef:
                          description: KeyFileRef is a reference to a secret containing
                            the key file.
                          properties:
                            key:
                              description: Key in the Secret.
                              type: string
                            name:
                              description: Name of the Secret.
                              type: string
                          required:
                          - name
                          type: object
                        serverName:
                          description: ServerName the datastore should present.
                          type: string
                      required:
                      - enableHostVerification
                      - enabled
                      type: object
                  required:
                  - cassandra
                  - name
                  - passwordSecretRef
                  type: object
                type: array
              image:
                description: Image defines the temporal server docker image the cluster
                  should use for each services.
                type: string
              imagePullSecrets:
                description: An optional list of references to secrets in the same
                  namespace to use for pulling temporal images from registries.
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              numHistoryShards:
                description: NumHistoryShards is the desired number of history shards.
                  This field is immutable.
                format: int32
                minimum: 1
                type: integer
              persistence:
                description: Persistence defines temporal persistence configuration.
                properties:
                  advancedVisibilityStore:
                    description: AdvancedVisibilityStore is the name of the datastore
                      to be used for visibility records
                    type: string
                  defaultStore:
                    description: DefaultStore is the name of the default data store
                      to use.
                    type: string
                  visibilityStore:
                    description: VisibilityStore is the name of the datastore to be
                      used for visibility records.
                    type: string
                required:
                - defaultStore
                - visibilityStore
                type: object
              services:
                description: Services allows customizations for for each temporal
                  services deployment.
                properties:
                  frontend:
                    description: Frontend service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        minimum: 1
                        type: integer
                    type: object
                  history:
                    description: History service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        minimum: 1
                        type: integer
                    type: object
                  matching:
                    description: Matching service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        minimum: 1
                        type: integer
                    type: object
                  worker:
                    description: Worker service custom specifications.
                    properties:
                      membershipPort:
                        description: 'Port defines a custom membership port for the
                          service. Default values are: 6933 for Frontend service 6934
                          for History service 6935 for Matching service 6939 for Worker
                          service'
                        type: integer
                      port:
                        description: 'Port defines a custom gRPC port for the service.
                          Default values are: 7233 for Frontend service 7234 for History
                          service 7235 for Matching service 7239 for Worker service'
                        type: integer
                      replicas:
                        description: Number of desired replicas for the service. Default
                          to 1.
                        minimum: 1
                        type: integer
                    type: object
                type: object
              ui:
                description: UI allows configuration of the optional temporal web
                  ui deployed alongside the cluster.
                properties:
                  enabled:
                    description: Enabled defines if the operator should deploy the
                      web ui alongside the cluster.
                    type: boolean
                  image:
                    description: Image defines the temporal ui docker image the instance
                      should run.
                    type: string
                  ingress:
                    description: Ingress is an optional ingress configuration for
                      the UI. If lived empty, no ingress configuration will be created
                      and the UI will only by available trough ClusterIP service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations allows custom annotations on the
                          ingress ressource.
                        type: object
                      hosts:
                        description: Host is the list of host the ingress should use.
                        items:
                          type: string
                        type: array
                      ingressClassName:
                        description: IngressClassName is the name of the IngressClass
                          the deployed ingress resource should use.
                        type: string
                      tls:
                        description: TLS configuration.
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the
                                TLS certificate. The values in this list must match
                                the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller
                                fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            secretName:
                              description: SecretName is the name of the secret used
                                to terminate TLS traffic on port 443. Field is left
                                optional to allow TLS routing based on SNI hostname
                                alone. If the SNI host in a listener conflicts with
                                the "Host" header field used by an IngressRule, the
                                SNI host is used for termination and value of the
                                Host header is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - hosts
                    type: object
                  version:
                    description: Version defines the temporal ui version the instance
                      should run.
                    type: string
                type: object
              version:
                description: Version defines the temporal version the cluster to be
                  deployed. This version impacts the underlying persistence schemas
                  versions.
                type: string
            required:
            - datastores
            - numHistoryShards
            - persistence
            - version
            type: object
          status:
            description: Most recent observed status of the Temporal cluster.
            properties:
              persistence:
                description: Persistence holds the persistence status.
                properties:
                  advancedVisibilityStoreSchemaVersion:
                    description: AdvancedVisibilityStoreSchemaVersion holds the current
                      schema version for the advanced visibility store.
                    type: string
                  defaultStoreSchemaVersion:
                    description: DefaultStoreSchemaVersion holds the current schema
                      version for the default store.
                    type: string
                  visibilityStoreSchemaVersion:
                    description: VisibilityStoreSchemaVersion holds the current schema
                      version for the visibility store.
                    type: string
                required:
                - advancedVisibilityStoreSchemaVersion
                - defaultStoreSchemaVersion
                - visibilityStoreSchemaVersion
                type: object
              services:
                description: Services holds all services statuses.
                items:
                  description: ServiceStatus reports a service status.
                  properties:
                    name:
                      description: Name of the temporal service.
                      type: string
                    version:
                      description: Current observed version of the service.
                      type: string
                  required:
                  - name
                  - version
                  type: object
                type: array
              version:
                description: Version holds the current temporal version.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
