apiVersion: v1
kind: Secret
metadata:
  name: postgres-password
  namespace: demo
type: Opaque
data:
  PASSWORD: dGVzdA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: demo
data:
  init-visibility-db.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
      CREATE DATABASE temporal_visibility;
      GRANT ALL PRIVILEGES ON DATABASE temporal_visibility TO $POSTGRES_USER;
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
  template:
    metadata:
      labels:
        service: postgres
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
          - name: postgres-init
            mountPath: /docker-entrypoint-initdb.d
          env:
            - name: POSTGRES_DB
              value: temporal
            - name: POSTGRES_USER
              value: temporal
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-password
                  key: PASSWORD
      volumes:
      - name: postgres-init
        configMap:
          name: postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: demo
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    service: postgres
